openapi: 3.0.1
info:
  title: Course API
  description: Course Information API
  version: "2.0"
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /students/{id}:
    get:
      tags:
      - student-controller
      operationId: findStudentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Student'
    put:
      tags:
      - student-controller
      operationId: updateStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      tags:
      - student-controller
      operationId: deleteStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/courses/{id}/edit:
    put:
      tags:
      - course-controller
      operationId: updateCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
  /students/create:
    post:
      tags:
      - student-controller
      operationId: createStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Student'
  /api/v1/courses/create:
    post:
      tags:
      - course-controller
      operationId: createCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
  /students:
    get:
      tags:
      - student-controller
      operationId: StudentList
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
  /api/v1/courses:
    get:
      tags:
      - course-controller
      operationId: coursesList
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
  /api/v1/courses/{id}:
    get:
      tags:
      - course-controller
      operationId: findByIdCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
    delete:
      tags:
      - course-controller
      operationId: deleteCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    Guardian:
      type: object
      properties:
        guardianName:
          type: string
        guardianEmail:
          type: string
        guardianPhone:
          type: string
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        guardian:
          $ref: '#/components/schemas/Guardian'
    Course:
      required:
      - courseId
      type: object
      properties:
        courseId:
          type: integer
          format: int64
        courseName:
          type: string
        courseCredit:
          maximum: 5
          type: integer
          format: int32
        courseCost:
          type: integer
          format: int32
        description:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        courseMaterial:
          $ref: '#/components/schemas/CourseMaterial'
        teacher:
          $ref: '#/components/schemas/Teacher'
    CourseMaterial:
      type: object
      properties:
        courseMaterialId:
          type: integer
          format: int64
        courseBook:
          type: string
        course:
          $ref: '#/components/schemas/Course'
    Teacher:
      type: object
      properties:
        teacherId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        emailAddress:
          type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
